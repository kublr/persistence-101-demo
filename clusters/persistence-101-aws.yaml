kind: Cluster
metadata:
  name: persistence-101-aws
  space: default
spec:
  features:
    ingress:
      chart:
        version: 1.22.2-9
      ingressControllers:
        - nginx:
            enabled: false
    kublrOperator:
      chart:
        version: 1.22.2-11
      enabled: true
    logging:
      chart:
        version: 1.22.2-33
      logCollection:
        enabled: false
      sinks:
        - selfHosted:
            clientNodes: 1
            dataNodes: 1
            enabled: false
            masterNodes: 1
        - centralLogging:
            clientNodes: 1
            dataNodes: 1
            enabled: true
            logstashReplicas: 1
            masterNodes: 1
            persistent: true
            size: 128G
    monitoring:
      chart:
        version: 1.22.2-14
      enabled: false
      platformClient:
        enabled: true
        prometheus:
          persistent: false
    system:
      chart:
        version: 1.22.2-6
  kublrAgentTgzUrl: 'https://repo.kublr.com/repository/gobinaries/kublr/1.19.16-58/kublr-1.19.16-58-linux.tar.gz'
  locations:
    - aws:
        awsApiAccessSecretRef: aws
        enableTerminationProtection: false
        region: us-east-1
        resourcesCloudFormationExtras:
          DevOpsDemoEFS:
            Type: AWS::EFS::FileSystem
            Properties: {}
          DevOpsDemoEFSMT4:
            Type: AWS::EFS::MountTarget
            Properties: 
              FileSystemId: { Ref: DevOpsDemoEFS }
              SecurityGroups: [ { "Fn::GetAtt": [ NewVpc, DefaultSecurityGroup ] } ]
              SubnetId: { Ref: SubnetNodePublic4 }
          DevOpsDemoEFSMT5:
            Type: AWS::EFS::MountTarget
            Properties:
              FileSystemId: { Ref: DevOpsDemoEFS }
              SecurityGroups: [ { "Fn::GetAtt": [ NewVpc, DefaultSecurityGroup ] } ]
              SubnetId: { Ref: SubnetNodePublic5 }
          DevOpsDemoPrivateHostedZone:
            Type: AWS::Route53::HostedZone
            Properties:
              Name: cluster.kublr.local
              VPCs: 
                - VPCId: { Ref: NewVpc }
                  VPCRegion: { Ref: 'AWS::Region' }
          DevOpsDemoPrivateHostedZoneRecordSetEFS:
            Type: AWS::Route53::RecordSet
            Properties:
              HostedZoneId: { Ref: DevOpsDemoPrivateHostedZone }
              Name: efs.cluster.kublr.local
              ResourceRecords:
                - { "Fn::Sub": [ '${EFS}.efs.${AWS::Region}.amazonaws.com', { EFS: { Ref: DevOpsDemoEFS } } ] }
              TTL: "300"
              Type: CNAME
      name: aws1
  master:
    kublrAgentConfig:
      kublr:
        psp:
          default_clusterrole: 'psp:privileged'
    kublrVariant: aws-ubuntu-20.04
    locations:
      - aws:
          availabilityZones:
            - us-east-1e
          # overrideImageId: ami-02354e95b39ca8dec
          imageRootDeviceName: /dev/xvda
          groupType: asg-mip
          mixedInstancesPolicyCloudFormationExtras:
            InstancesDistribution:
              OnDemandPercentageAboveBaseCapacity: 0
            LaunchTemplate:
              Overrides:
                - InstanceType: t3.medium
                - InstanceType: t2.medium
          instanceMonitoring: false
          instanceType: t3.medium
          rootVolume:
            size: 40
          subnetIds:
            - ''
        locationRef: aws1
    minNodes: 1
  network:
    apiServerSecurePort: 6443
  nodes:
    - autoscaling: false
      kublrVariant: aws-ubuntu-18.04
      locations:
        - aws:
            availabilityZones:
              - us-east-1e
              - us-east-1f
            instanceMonitoring: false
            instanceType: m5a.large
            rootVolume:
              size: 40
            # overrideImageId: ami-02354e95b39ca8dec
            imageRootDeviceName: /dev/xvda
            groupType: asg-mip
            mixedInstancesPolicyCloudFormationExtras:
              InstancesDistribution:
                OnDemandPercentageAboveBaseCapacity: 0
              LaunchTemplate:
                Overrides:
                  - InstanceType: m5a.large
                  - InstanceType: m5.large
                  - InstanceType: m5ad.large
                  - InstanceType: m5d.large
                  - InstanceType: m5n.large
                  - InstanceType: m5dn.large
                  - InstanceType: t3.large
            subnetIds:
              - ''
              - ''
          locationRef: aws1
      minNodes: 2
      name: group1
  packages:
    nfs-subdir-external-provisioner:
      helmVersion: '3.4.0'
      namespace: kube-system
      releaseName: nfs-subdir-external-provisioner
      chart:
        name: nfs-subdir-external-provisioner
        url: https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/releases/download/nfs-subdir-external-provisioner-3.0.0/nfs-subdir-external-provisioner-3.0.0.tgz
      values:
        nfs:
          server: efs.cluster.kublr.local
          path: /
        storageClass:
          provisionerName: example.io/nfs
